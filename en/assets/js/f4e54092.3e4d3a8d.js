"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[3156],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),m=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=m(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=m(t),d=i,f=p["".concat(u,".").concat(d)]||p[d]||l[d]||o;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=p;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var m=2;m<o;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2316:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return s},default:function(){return p}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],c={extends:"_layouts.documentation",section:"content",title:"C#",description:"C# Dev Snippets"},u="C&",m={unversionedId:"csharp/index",id:"csharp/index",title:"C#",description:"C# Dev Snippets",source:"@site/docs/csharp/index.md",sourceDirName:"csharp",slug:"/csharp/",permalink:"/my-docs/en/docs/csharp/",editUrl:"https://github.com/easy-quest/my-docs/edit/master/website/docs/csharp/index.md",tags:[],version:"current",frontMatter:{extends:"_layouts.documentation",section:"content",title:"C#",description:"C# Dev Snippets"},sidebar:"tutorialSidebar",previous:{title:"C++ Program Structure",permalink:"/my-docs/en/docs/c/"},next:{title:"CSS",permalink:"/my-docs/en/docs/css/"}},s=[{value:"Shuffle an Array",id:"shuffle-an-array",children:[],level:2},{value:"Minimum And Maximum Number",id:"minimum-and-maximum-number",children:[],level:2}],l={toc:s};function p(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"c"},"C","#"),(0,o.kt)("h2",{id:"shuffle-an-array"},"Shuffle an Array"),(0,o.kt)("p",null,"Method to shuffle an array of strings in place."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"private void Shuffle(string[] e)\n{\n    var rnd = new Random();\n    string temp;\n    for (int i = e.Length - 1; i > 0; i--)\n    {\n        int j = rnd.Next(0, i);\n        temp = e[i];\n        e[i] = e[j];\n        e[j] = temp;\n    }\n}\n")),(0,o.kt)("h1",{id:"c-1"},"C","#"),(0,o.kt)("h2",{id:"minimum-and-maximum-number"},"Minimum And Maximum Number"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'int[] arr1= new int[100];\n    int i, mx, mn, n;\n    \n    \n       Console.Write("\\n\\nFind maximum and minimum element in an array :\\n");\n       Console.Write("--------------------------------------------------\\n");   \n\n       Console.Write("Input the number of elements to be stored in the array :");\n       n= Convert.ToInt32(Console.ReadLine());  \n   \n       Console.Write("Input {0} elements in the array :\\n",n);\n       for(i=0;i<n;i++)\n            {\n          Console.Write("element - {0} : ",i);\n          arr1[i] = Convert.ToInt32(Console.ReadLine());  \n        }\n\n\n    mx = arr1[0];\n    mn = arr1[0];\n\n    for(i=1; i<n; i++)\n    {\n        if(arr1[i]>mx)\n        {\n            mx = arr1[i];\n        }\n\n\n        if(arr1[i]<mn)\n        {\n            mn = arr1[i];\n        }\n    }\n    Console.Write("Maximum element is : {0}\\n", mx);\n    Console.Write("Minimum element is : {0}\\n\\n", mn);\n')))}p.isMDXComponent=!0}}]);