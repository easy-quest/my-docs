"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[6190],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3726:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={title:"Bash - Key Bindings",description:"Bash Keybindings",extends:"_layouts.documentation",section:"content"},l="Shell Keybindings",c={unversionedId:"bash/keybindings",id:"bash/keybindings",title:"Bash - Key Bindings",description:"Bash Keybindings",source:"@site/docs/bash/keybindings.md",sourceDirName:"bash",slug:"/bash/keybindings",permalink:"/my-docs/en/docs/bash/keybindings",editUrl:"https://github.com/easy-quest/my-docs/edit/master/website/docs/bash/keybindings.md",tags:[],version:"current",frontMatter:{title:"Bash - Key Bindings",description:"Bash Keybindings",extends:"_layouts.documentation",section:"content"},sidebar:"tutorialSidebar",previous:{title:"Bash Snippets",permalink:"/my-docs/en/docs/bash/"},next:{title:"C++ Program Structure",permalink:"/my-docs/en/docs/c/"}},u=[{value:"Navigation \ud83d\ude80",id:"navigation-",children:[],level:2},{value:"Editing \u270f\ufe0f",id:"editing-\ufe0f",children:[],level:2}],d={toc:u};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"shell-keybindings"},"Shell Keybindings"),(0,i.kt)("h2",{id:"navigation-"},"Navigation \ud83d\ude80"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Alt + f/b"),"  - Move cursor to previous/next word\n",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl + a/e")," - Move cursor to beginning/end of command\n",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl + xx"),"  - Toggle between the start of line and current cursor position"),(0,i.kt)("h2",{id:"editing-\ufe0f"},"Editing \u270f\ufe0f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Ctrl + x,e   - Open command in editor\nCtrl + k     - Cut till end\nCtrl + u     - Delete whole line (zsh)/ cut until beginning (bash)\nAlt + w      - Delete until beginning (zsh)\nAlt + l/u    - Lowercase/Uppercase word\nAlt + c       - Capitalize word\nCtrl + w     - Cut previous word\nAlt + Del    - Delete previous word\nAlt + d        - Delete next word\nAlt +. or !$ - Previous commands last arguement\n!*                - All arguments of previous command\nAlt + t        - Swap current word with previous\nCtrl + t       - Swap the last two characters before the cursor (typo). <br>\nEsc + t       - Swap the last two words before the cursor\nCtrl + y      - Paste\nCtrl + _      - Undo\nAlt + r        - Cancel the changes, revert\n---\n## Process \ud83d\udcca\nCtrl + l - Clear screen\nCtrl + c - Interrupt/Kill\nCtrl + d - Close current shell\nCtrl + s - Stop output to the, use PgUp/PgDn for navigation\nCtrl + z - Background/Foreground job\n---\n## History \u23f3\nCtrl + r   - History search\nCtrl + s   - Go back to the next most recent command\n^abc^def   - Run previous command, replacing abc with def\n---\n## Modes \ud83d\udd79\ufe0f\nCtrl +x,v - vi mode (zsh)\nset -o vi - Vi mode\n")))}p.isMDXComponent=!0}}]);