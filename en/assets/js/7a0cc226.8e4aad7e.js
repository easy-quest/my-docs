"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[6861],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,k=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return t?r.createElement(k,i(i({ref:n},d),{},{components:t})):r.createElement(k,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3106:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={extends:"_layouts.documentation",section:"content",title:"Install Docker-CE on Ubuntu Linux 18.04",description:"Docker Dev Snippets"},l="Docker",s={unversionedId:"docker/index",id:"docker/index",title:"Install Docker-CE on Ubuntu Linux 18.04",description:"Docker Dev Snippets",source:"@site/docs/docker/index.md",sourceDirName:"docker",slug:"/docker/",permalink:"/my-docs/en/docs/docker/",editUrl:"https://github.com/easy-quest/my-docs/edit/master/website/docs/docker/index.md",tags:[],version:"current",frontMatter:{extends:"_layouts.documentation",section:"content",title:"Install Docker-CE on Ubuntu Linux 18.04",description:"Docker Dev Snippets"},sidebar:"tutorialSidebar",previous:{title:"CSS",permalink:"/my-docs/en/docs/css/"},next:{title:"Dcoker Swarm",permalink:"/my-docs/en/docs/docker-swarm/"}},d=[{value:"Installing Docker-CE on Ubuntu Linux 18.04",id:"installing-docker-ce-on-ubuntu-linux-1804",children:[],level:2},{value:"Clean unused data",id:"clean-unused-data",children:[],level:2},{value:"Clear docker logs",id:"clear-docker-logs",children:[],level:2},{value:"Get IP Address of a container",id:"get-ip-address-of-a-container",children:[],level:2},{value:"Docker Cheatsheet",id:"docker-cheatsheet",children:[{value:"Docker build",id:"docker-build",children:[],level:3},{value:"Docker images",id:"docker-images",children:[],level:3},{value:"Docker containers",id:"docker-containers",children:[],level:3},{value:"Remove all dangling images",id:"remove-all-dangling-images",children:[],level:3},{value:"Remove all exited containers",id:"remove-all-exited-containers",children:[],level:3}],level:2}],u={toc:d};function p(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker"},"Docker"),(0,o.kt)("h2",{id:"installing-docker-ce-on-ubuntu-linux-1804"},"Installing Docker-CE on Ubuntu Linux 18.04"),(0,o.kt)("p",null,"(Should be the same for most current versions)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Update the apt package list.\nsudo apt-get update -y\n\n# Install Docker's package dependencies.\nsudo apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\n# Download and add Docker's official public PGP key.\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\n# Verify the fingerprint.\nsudo apt-key fingerprint 0EBFCD88\n\n# Add the `stable` channel's Docker upstream repository.\nsudo add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\n# Update the apt package list (for the new apt repo).\nsudo apt-get update -y\n\n# Install the latest version of Docker CE.\nsudo apt-get install -y docker-ce\n\n# Allow your user to access the Docker CLI without needing root access.\n# You need to log out and log back in so that your group membership is re-evaluated\nsudo usermod -aG docker $USER\n")),(0,o.kt)("h2",{id:"clean-unused-data"},"Clean unused data"),(0,o.kt)("p",null,"Removes all:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Stoped containers"),(0,o.kt)("li",{parentName:"ul"},"Unused networks"),(0,o.kt)("li",{parentName:"ul"},"Dangling images"),(0,o.kt)("li",{parentName:"ul"},"Dangling build cache")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker system prune\n")),(0,o.kt)("h2",{id:"clear-docker-logs"},"Clear docker logs"),(0,o.kt)("p",null,"Finds all ",(0,o.kt)("inlineCode",{parentName:"p"},".log")," files in ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/lib/docker/containers/")," and truncates their size to 0."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo find /var/lib/docker/containers/ -name "*.log*" -exec truncate -s 0 {} \\;\n')),(0,o.kt)("h2",{id:"get-ip-address-of-a-container"},"Get IP Address of a container"),(0,o.kt)("p",null,"Remember to change the container name or id"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id\n")),(0,o.kt)("h2",{id:"docker-cheatsheet"},"Docker Cheatsheet"),(0,o.kt)("h3",{id:"docker-build"},"Docker build"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"// simple build\n\ndocker build .\n\n// good practice\n\ndocker build -t <tag name> .\n\n// please note, for these command to work you need to have a dockerfile present.\n")),(0,o.kt)("h3",{id:"docker-images"},"Docker images"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'\n// list all images on disk\n\ndocker images\n\n// search a particular image\ndocker images --filter=reference="centos"  //will give all locally present images of centos\n\n// remove a certain image\n\ndocker image rm <image hash> //only first 3 characters of hash code is enough for docker daemon to distinguish the image.\n')),(0,o.kt)("h3",{id:"docker-containers"},"Docker containers"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'// list all containers online/offline\ndocker ps -a\ndocker container ls -a\n\n// remove/stop/kill a certain container\ndocker kill rm <container hash>\n\n//coming out of container without exiting it\nctrl+P+Q\n\n//searching docker image on docker hub\ndocker search <<image_name>>\n\n//tagging local image with another name\ndocker tag <<old_image_name>> <<new_image_name>>\n\n//"SSH" into a running container\ndocker exec -it <<container_name>> /bin/bash\n\n//Execute arbitrary command in container\ndocker exec -it <<container_name>> <<command>>\n\n')),(0,o.kt)("h3",{id:"remove-all-dangling-images"},"Remove all dangling images"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'docker rmi $(docker images | grep "^<none>" | awk "{print $3}")\n')),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'docker rmi -f $(docker images -f "dangling=true" -q)\n')),(0,o.kt)("h3",{id:"remove-all-exited-containers"},"Remove all exited containers"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm\n")))}p.isMDXComponent=!0}}]);